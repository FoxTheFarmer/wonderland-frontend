import { Networks } from "./blockchain";

const AVAX_MAINNET = {
    DAO_ADDRESS: "0x78a9e536EBdA08b5b9EDbE5785C9D1D50fA3278C",
    MEMO_ADDRESS: "0x136Acd46C134E8269052c62A67042D6bDeDde3C9",
    TIME_ADDRESS: "0xb54f16fB19478766A268F172C9480f8da1a7c9C3",
    MIM_ADDRESS: "0x130966628846BFd36ff31a822705796e8cb8C18D",
    STAKING_ADDRESS: "0x4456B87Af11e87E329AB7d7C7A246ed1aC2168B9",
    STAKING_HELPER_ADDRESS: "0x096BBfB78311227b805c968b070a81D358c13379",
    TIME_BONDING_CALC_ADDRESS: "0x819323613AbC79016f9D2443a65E9811545382a5",
    TREASURY_ADDRESS: "0x1c46450211CB2646cc1DA3c5242422967eD9e04c",
    ZAPIN_ADDRESS: "0x9ABE63C5A2fBcd54c8bAec3553d326356a530cae", //"0xb98007C04f475022bE681a890512518052CE6104",
    WMEMO_ADDRESS: "0x0da67235dD5787D67955420C84ca1cEcd4E5Bb3b",
};
const BOBA_MAINNET = {
    DAO_ADDRESS: "",
    MEMO_ADDRESS: "",
    TIME_ADDRESS: "",
    MIM_ADDRESS: "",
    STAKING_ADDRESS: "",
    STAKING_HELPER_ADDRESS: "",
    TIME_BONDING_CALC_ADDRESS: "",
    TREASURY_ADDRESS: "",
    ZAPIN_ADDRESS: "",
    WMEMO_ADDRESS: "",
};
const RINKEBY = {
    // Presale
    ACYBER_ADDRESS: "0x3DC47E4573e695Bd26876a8AD070490ef18f9F48",
    PRESALE_ADDRESS: "0x61731352D253D5c6b4f947fE53CE8Ba3Bc7BffC0",
    PRESALE_CLAIM_ADDRESS: "0xc0b1d9BD3A408606146aF52D0eC7f6C1EFBdB130",
    // Main
    DAO_ADDRESS: "0x78a9e536EBdA08b5b9EDbE5785C9D1D50fA3278C",
    TIME_ADDRESS: "0xD7d425128e309a37E8470eed1ba00687DF081975", // CYBER
    MEMO_ADDRESS: "0x886DA0840Fd919228B3Bf09c59E774EFAecd187E", // sCYBER
    MIM_ADDRESS: "0xe7cfb29AC42694B99dd9ad568336c722f3e819E1", // DAI
    STAKING_ADDRESS: "0x21719111232aB0b601E4f829BB7e471C7C4ae6B2",
    STAKING_HELPER_ADDRESS: "0x10a858b85D347bcd039a6a1d00e43DaE58409ADE",
    TIME_BONDING_CALC_ADDRESS: "0x7064931D9433d7c6E97cE3597A645B9557A320f0",
    TREASURY_ADDRESS: "0xd1d62152e73EDc42950452991A102Bc49C6Dbf51",
    ZAPIN_ADDRESS: "",
    WMEMO_ADDRESS: "",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AVAX) return AVAX_MAINNET;
    if (networkID === Networks.BOBA) return BOBA_MAINNET;
    if (networkID === Networks.RINKEBY) return RINKEBY;

    throw Error("Network don't support");
};
